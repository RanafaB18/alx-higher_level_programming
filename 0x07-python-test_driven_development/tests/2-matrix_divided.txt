The ``2-matrix_divided`` module
============================

Using ``matrix_divided``
---------------------

Import ``matrix_divided`` from module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Dividing matrix by 3:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Dividing matrix by a float:
    >>> matrix_divided([[10, 20, 30], [40.33, 50.74, 60.89]], 2.3)
    [[4.35, 8.7, 13.04], [17.53, 22.06, 26.47]]

Passing an empty matrix:
    >>> matrix_divided([], 10)
    Traceback (most recent call last):
    	      ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Dividing matrix by 0:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
    	      ...
    ZeroDivisionError: division by zero

Including an empty list in the matrix:
    >>> matrix_divided([[2, 2, 2], [], [2, 2, 2]], 10)
    Traceback (most recent call last):
    	      ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Dividing matrix by a string:
    >>> matrix_divided([[2, 2, 2], [2, 2, 2], [2, 2, 2]], "10")
    Traceback (most recent call last):
    	      ...
    TypeError: div must be a number

Including string in the matrix:
    >>> matrix_divided([[2, "2", 2], [2, 2, 2], [2, 2, 2]], "10")
    Traceback (most recent call last):
    	      ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Including string in the matrix 2:
    >>> matrix_divided([[2, 2, 2], "[2, 2, 2]", [2, 2, 2]], "10")
    Traceback (most recent call last):
    	      ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

1 by 1 matrix:
    >>> matrix_divided([[2]], 2)
    [[1.0]]

Passing a boolean:
    >>> matrix_divided([[2]], True)
    Traceback (most recent call last):
    	      ...
    TypeError: div must be a number

